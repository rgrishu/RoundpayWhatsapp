@using Whatsapp.Models.Data;
@model PackageView
@{
    var result = Model.Packages.GroupBy(a => a.MasterPackageID).ToDictionary(a => a.Key, e => e.Select(a => new { ServiceID = a.ServiceID, Id = a.Id, IsActive = a.IsActive, IsChargeAfterHitExceed = a.IsChargeAfterHitExceed, IsDirectChargeable = a.IsDirectChargeable, Charge = a.Charge, a.FeatureID, a.MasterPackage }));
    var result2 = Model.MasterPackages.GroupBy(a => a.Id).ToDictionary(a => a.Key, b => b.Select(b => new { PackageName = b.PackageName, HitCount = b.HitCount }));
    List<Int64> newlisyt2 = new List<Int64>();
    List<string> getPackage = new List<string>();
    List<Int32> getHitcount = new List<Int32>();
    int i = 1;
    int j = 0;
    int K = 0;
    int M = 0;
}
@if (result.Count != 0)
{
    @foreach (var item in result.OrderBy(a => a.Key))
    {
        List<Int64> newlisyt = new List<Int64>();
        newlisyt2.Add(item.Key);
        <tr data-package-id="@item.Key">
            <td class="checkme">@i</td>
            <td>@item.Value.FirstOrDefault().MasterPackage.PackageName</td>
            <td>@item.Value.FirstOrDefault().MasterPackage.HitCount</td>
            @*@foreach (var hitcodes in result2.Values)
    {
    if (K == M)
    {

    M++;
    break;
    }
    K++;
    }*@
            <td>
                <div class="row">
                    @foreach (var service in Model.MasterServices)
                    {
                        foreach (var item2 in item.Value.OrderBy(a => a.ServiceID))
                        {
                            bool checkForFeature;
                            if (service.CheckIsFeature && service.ServiceID == item2.FeatureID)
                            {
                                newlisyt.Add(Convert.ToInt64(item2.FeatureID));
                                checkForFeature = true;
                            }
                            else if (service.CheckIsFeature.Equals(false) && service.ServiceID == item2.ServiceID)
                            {
                                newlisyt.Add(Convert.ToInt64(item2.ServiceID));
                                checkForFeature = true;
                            }
                            else
                            {
                                checkForFeature = false;
                            }
                            if (checkForFeature)
                            {

                                string check = item2.IsActive == true ? "checked" : "";
                                string IsChargeAfterHitExceed = item2.IsChargeAfterHitExceed == true ? "checked" : "";
                                string IsDirectChargeable = item2.IsDirectChargeable == true ? "checked" : "";
                                string readonlys = "readonly";
                                if (item2.IsChargeAfterHitExceed || item2.IsDirectChargeable)
                                {
                                    readonlys = "";
                                }
                                <div class="my-1 col-4">
                                    <label class="sr-only" for="inlineFormInputGroupUsername">Username</label>
                                    <div class="input-group">
                                        <input type="hidden" id="Id_@j" value="@item2.Id">
                                        @if (service.CheckIsFeature)
                                        {
                                            <input type="hidden" id="FeatureId_@j" value="@service.ServiceID">
                                        }
                                        else
                                        {
                                            <input type="hidden" id="ServiceId_@j" value="@service.ServiceID">
                                        }
                                        <div class="input-group-prepend">
                                            <div class="input-group-text">
                                                <label class="switch">
                                                    <input type="checkbox" class="form-check-input" @check id="Current_@j" onchange="SaveCurrentData(this.id)">
                                                    <span class="slider round"></span>
                                                </label>
                                            </div>
                                        </div>
                                        <input type="text" class="form-control" readonly id="" value="@service.ServiceName" placeholder="">
                                    </div>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text">
                                                <label class="switch switchAfterHit">
                                                    <input type="checkbox" class="form-check-input" onchange="IsChargeable(this.id)" id="IsChargeAfterHitExceed_@j" @IsChargeAfterHitExceed>
                                                    <span class="slider round"></span>
                                                </label>
                                            </div>
                                        </div>
                                        <input type="number" class="form-control" @readonlys id="Charge_@j" onfocusout="SaveCurrentData(this.id)" value="@item2.Charge" placeholder="0">
                                        <div class="input-group-append">
                                            <div class="input-group-text">
                                                <label class="switch switchDirect">
                                                    <input type="checkbox" class="form-check-input" onchange="IsChargeable(this.id)" id="IsDirectChargeable_@j" @IsDirectChargeable>
                                                    <span class="slider round"></span>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                check = String.Empty;
                                IsChargeAfterHitExceed = String.Empty;
                                readonlys = String.Empty;
                                j++;
                                break;
                            }
                        }
                    }
                    @foreach (var service in Model.MasterServices)
                    {
                        service.ServiceName.ToString();
                        if (!newlisyt.Contains(service.ServiceID))
                        {
                            <div class="my-1 col-4">
                                <label class="sr-only" for="inlineFormInputGroupUsername">Username</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">
                                            <label class="switch">
                                                <input type="checkbox" class="form-check-input" id="Current_@j" onchange="SaveCurrentData(this.id)">
                                                <span class="slider round"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <input type="hidden" id="Id_@j" value="0">
                                    @if (service.CheckIsFeature)
                                    {
                                        <input type="hidden" id="FeatureId_@j" value="@service.ServiceID">
                                    }
                                    else
                                    {
                                        <input type="hidden" id="ServiceId_@j" value="@service.ServiceID">
                                    }
                                    <input type="text" class="form-control" readonly id="" value="@service.ServiceName" placeholder="">
                                </div>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">
                                            <label class="switch switchAfterHit">
                                                <input type="checkbox" class="form-check-input" onchange="IsChargeable(this.id)" id="IsChargeAfterHitExceed_@j">
                                                <span class="slider round"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <input type="number" value="0" class="form-control" readonly id="Charge_@j" onfocusout="SaveCurrentData(this.id)" placeholder="">
                                    <div class="input-group-append">
                                        <div class="input-group-text">
                                            <label class="switch switchDirect">
                                                <input type="checkbox" class="form-check-input" onchange="IsChargeable(this.id)" id="IsDirectChargeable_@j">
                                                <span class="slider round"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            j++;
                        }
                    }
                </div>
            </td>
        </tr>
        i++;
    }
}
@if (result2.Count > result.Count && result2 != null)
{
    @foreach (var item in result2)
    {
        if (!newlisyt2.Contains(item.Key))
        {

            <tr data-package-id="@item.Key">
                <td>@i</td>
                <td>@item.Value.FirstOrDefault().PackageName</td>
                <td>@item.Value.FirstOrDefault().HitCount</td>
                @*@foreach (var hitcodes in result2.Values)
                {
                    if (K == M)
                    {
                        <td>@hitcodes.FirstOrDefault().PackageName</td>
                        <td>@hitcodes.FirstOrDefault().HitCount</td>
                        M++;
                        break;
                    }
                    K++;
                }*@
                <td>
                    <div class="row">
                        @foreach (var item2 in Model.MasterServices)
                        {
                            <div class="my-1 col-4">
                                <label class="sr-only" for="inlineFormInputGroupUsername">Username</label>
                                <input type="hidden" id="Id_@j" value="0">
                                @if (item2.CheckIsFeature)
                                {
                                    <input type="hidden" id="FeatureId_@j" value="@item2.ServiceID">
                                }
                                else
                                {
                                    <input type="hidden" id="ServiceId_@j" value="@item2.ServiceID">
                                }
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">
                                            <label class="switch">
                                                <input type="checkbox" class="form-check-input" id="Current_@j" onchange="SaveCurrentData(this.id)">
                                                <span class="slider round"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <input type="text" class="form-control" readonly id="" value="@item2.ServiceName" placeholder="">
                                </div>
                                <div class="input-group w-100">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">
                                            <label class="switch switchAfterHit">
                                                <input type="checkbox" class="form-check-input" onchange="IsChargeable(this.id)" id="IsChargeAfterHitExceed_@j">
                                                <span class="slider round"></span>
                                            </label>
                                        </div>
                                    </div>
                                    <input type="number" readonly class="form-control" id="Charge_@j" onfocusout="SaveCurrentData(this.id)" placeholder="0">
                                    <div class="input-group-prepend">
                                        <div class="input-group-text">
                                            <label class="switch switchDirect">
                                                <input type="checkbox" class="form-check-input" onchange="IsChargeable(this.id)" id="IsDirectChargeable_@j">
                                                <span class="slider round"></span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            j++;
                        }
                    </div>
                </td>

                break;
            </tr>
        }
        i++;
        K++;
        M++;
    }
}
<script>
    function IsChargeable(clicked_id) {
        var ids = clicked_id.substr(clicked_id.indexOf("_") + 1);
        var IsActive = $('#IsChargeAfterHitExceed_' + ids).is(":checked") ? true : false;
        var IsActive2 = $('#IsDirectChargeable_' + ids).is(":checked") ? true : false;
        if (IsActive == true || IsActive2 == true) {
            $("#Charge_" + ids).attr("readonly", false);
        }
        else {
            $("#Charge_" + ids).attr("readonly", true).val(0);
        }
        SaveCurrentData(clicked_id);
    }
    $(function() {
        $(".switchAfterHit").unbind().hover(function() {
            $(this).unbind().addClass("tooltips").attr('title', 'After Hit Count is Exausted cost will be used');
        })
        $(".switchDirect").unbind().hover(function() {
            $(this).unbind().addClass("tooltips").attr('title', 'Use Direct cost');
        })
    })
</script>