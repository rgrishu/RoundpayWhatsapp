@using Whatsapp.Models.Data;
@model PackageView
@{
    var result = Model.Packages.GroupBy(a => a.MasterPackageID).ToDictionary(a => a.Key, e => e.Select(a => new { ServiceID = a.ServiceID, Id = a.Id, IsActive = a.IsActive, IsChargeAfterHitExceed = a.IsChargeAfterHitExceed, IsDirectChargeable = a.IsDirectChargeable, Charge = a.Charge, a.FeatureID, a.MasterServiceFeatures, a.MasterService, a.MasterPackage }));
    ViewData["Title"] = "Packages";
    bool flag = true;
    string ExpiresIn = String.Empty;
    int difference = 0;
    DateTime purchasedDate = DateTime.Now.Date;
}

<style>
    @@import url("https://fonts.googleapis.com/css?family=Montserrat");

    .pricing-table {
        background-color: #eee;
        font-family: 'Montserrat', sans-serif;
    }

        .pricing-table .block-heading {
            padding-top: 50px;
            margin-bottom: 40px;
            text-align: center;
        }

            .pricing-table .block-heading h2 {
                color: #3b99e0;
            }

            .pricing-table .block-heading p {
                text-align: center;
                max-width: 420px;
                margin: auto;
                opacity: 0.7;
            }

        .pricing-table .heading {
            text-align: center;
            padding-bottom: 10px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .pricing-table .item {
            background-color: #ffffff;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.075);
            border-top: 2px solid #5ea4f3;
            padding: 30px;
            overflow: hidden;
            position: relative;
        }

        .pricing-table .col-md-5:not(:last-child) .item {
            margin-bottom: 30px;
        }

        .pricing-table .item button {
            font-weight: 600;
        }

        .pricing-table .ribbon {
            width: 160px;
            height: 32px;
            font-size: 12px;
            text-align: center;
            color: #fff;
            font-weight: bold;
            box-shadow: 0px 2px 3px rgba(136, 136, 136, 0.25);
            background: #4dbe3b;
            transform: rotate(45deg);
            position: absolute;
            right: -42px;
            top: 20px;
            padding-top: 7px;
        }

        .pricing-table .item p {
            text-align: center;
            margin-top: 20px;
            opacity: 0.7;
        }

        .pricing-table .features .feature {
            font-weight: 500;
        }

        .pricing-table .features h4, h5 {
            text-align: center;
            font-size: 16px;
            padding: 2px;
        }

        .pricing-table .price h4 {
            margin: 15px 0;
            font-size: 45px;
            text-align: center;
            color: #2288f9;
        }

        .pricing-table .buy-now button {
            text-align: center;
            margin: auto;
            font-weight: 600;
            padding: 9px 0;
        }
</style>

<div class="container">
    <div class="row">
    </div>
</div>
<section class="pricing-table">
    <div class="container">
        <div class="block-heading">
            <h2>Our Pricing</h2>
        </div>
        <div class="row justify-content-md-center">
            @foreach (var item in result)
            {
                <div class="col-md-5 col-lg-4">
                    <div class="item">
                        @foreach(var packages in Model.UserPuchasedPackageIds)
                        {
                            if(packages.MasterPackageId == item.Key)
                            {
                                <div class="ribbon">Purchased</div>
                                flag = false;
                                ExpiresIn = (purchasedDate - packages.CreatedDate.Date).TotalDays.ToString();
                                difference = Convert.ToInt32(item.Value.FirstOrDefault().MasterPackage.ValidityInDays) - Convert.ToInt32(ExpiresIn);
                                break;
                            }
                        }
                        @*@if (Model.UserPuchasedPackageIds.Contains(item.Key))
                        {
                        
                        }*@
                        <div class="heading">
                            <h3>@item.Value.FirstOrDefault().MasterPackage.PackageName</h3>
                        </div>
                        @foreach (var item2 in item.Value)
                        {
                            <div class="features mt-3">
                                @if (item2.ServiceID != null && item2.ServiceID != 0)
                                {
                                    <h4><span class="feature">@item2.MasterService.ServiceName</span> </h4>
                                }
                                else if (item2.FeatureID != null && item2.FeatureID != 0)
                                {
                                    <h5>
                                        <span class="feature">@item2.MasterServiceFeatures.FeatureName</span>
                                        @if (item2.Charge != null && !item2.Charge.Equals("0"))
                                        {
                                            <span class="feature"> - @item2.Charge/Msg</span>
                                        }
                                    </h5>
                                }
                            </div>
                        }
                        <div class="features">
                            <h4><span class="feature">Validity - </span><span class="feature">@item.Value.FirstOrDefault().MasterPackage.ValidityInDays</span> </h4>
                        </div>
                        <div class="price">
                            <h4><i class="fa fa-rupee-sign"></i>@item.Value.FirstOrDefault().MasterPackage.Cost</h4>
                        </div>
                        @if (flag)
                        {
                            <a class="btn btn-block btn-outline-primary" onclick="PurchagePackage(@item.Key)">BUY NOW</a>
                        }
                        else
                        {
                            <hr>
                            <p class="text-center mb-0">
                            <span>Expires In : @difference Days</span>
                            </p>
                        }

                    </div>
                </div>
                flag = true;
                ExpiresIn = String.Empty;
                difference = 0;
            }

        </div>
    </div>
</section>

@section scripts{
    <script>

        function PurchagePackage(id) {
            $.ajax({
                type: 'get',
                url: 'BuyPackages/' + id,
                success: function(response) {
                    console.log(response);
                    console.log(response.responseText);
                    Q.notify(response.statusCode, response.responseText);
                    if (response.statusCode == 1) {
                        window.setTimeout(function() {
                            window.location = "GetPackages";
                        }, 3000);
                    }
                },
                error: function(data) {
                },
            });
        }
    </script>
}

